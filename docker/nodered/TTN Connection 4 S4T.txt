[{"id":"d7c08a08.86aa28","type":"ttn message","z":"a164773.56d3188","name":"","app":"d3426ce9.098c1","dev_id":"s4t_01","field":"","x":360,"y":140,"wires":[["b1cdf12b.40ad7","435917a7.f4c268"]]},{"id":"19e287e3.a92458","type":"ttn send","z":"a164773.56d3188","name":"","app":"d3426ce9.098c1","dev_id":"s4t_01","port":"","x":654,"y":314,"wires":[]},{"id":"b1cdf12b.40ad7","type":"function","z":"a164773.56d3188","name":"function","func":"return {\n    dev_id: msg.dev_id,\n    port: msg.port,\n    payload: {\n        led: !msg.payload\n    }\n};","outputs":1,"noerr":0,"x":502,"y":244,"wires":[["19e287e3.a92458","1b7f2b26.025865"]]},{"id":"435917a7.f4c268","type":"debug","z":"a164773.56d3188","name":"message","active":true,"console":"false","complete":"true","x":611,"y":146,"wires":[]},{"id":"1b7f2b26.025865","type":"debug","z":"a164773.56d3188","name":"function","active":true,"console":"false","complete":"true","x":655,"y":231,"wires":[]},{"id":"8a948d9b.86582","type":"mqtt in","z":"a164773.56d3188","name":"MQTT Node - TheThingsNetwork","topic":"+/devices/+/up","qos":"2","broker":"ac23937f.b79a","x":410,"y":440,"wires":[["70161aa3.d753b4","5f86ce4e.e627d"]]},{"id":"2b247a85.292146","type":"debug","z":"a164773.56d3188","name":"msg.payload.payload_raw - DATA (as is)","active":true,"console":"false","complete":"payload","x":620,"y":631,"wires":[]},{"id":"70161aa3.d753b4","type":"function","z":"a164773.56d3188","name":"Decrypt Payload","func":"// msg1 - Unencrypted (vanilla data)\nvar msg1 = { payload: msg.payload.length };\nmsg1.payload = JSON.parse(msg.payload);\nmsg1.payload = msg1.payload.payload_raw;\n\n// msg2 - Decrypt to Text\nvar msg2 = { payload: msg.payload.length };\nmsg2.payload = JSON.parse(msg.payload);\nmsg2.payload = new Buffer(msg2.payload.payload_raw, 'base64').toString('ascii');\n\n// msg3 - Decrypt as Binary value (MSB,LSB)\nvar msg3 = { payload: msg.payload.length };\nmsg3.payload = JSON.parse(msg.payload);\nmsg3.payload = new Buffer(msg3.payload.payload_raw, 'base64').toString('hex');\n//msg3.payload = parseInt(msg3.payload, 16);\n\nreturn [ msg1, msg2, msg3 ];","outputs":"3","noerr":0,"x":697,"y":489,"wires":[["2b247a85.292146"],["f2da035f.d054f"],["86d8dded.f843d"]]},{"id":"f2da035f.d054f","type":"debug","z":"a164773.56d3188","name":"msg.payload.payload_raw - DATA (decrypted to text)","active":true,"console":"false","complete":"payload","x":656,"y":693.5,"wires":[]},{"id":"86d8dded.f843d","type":"debug","z":"a164773.56d3188","name":"msg.payload.payload_raw - DATA (decrypted to Bytes HiLo)","active":true,"console":"false","complete":"payload","x":666,"y":758.5,"wires":[]},{"id":"5f86ce4e.e627d","type":"debug","z":"a164773.56d3188","name":"message (as is)","active":true,"console":"false","complete":"payload","x":835,"y":439.5,"wires":[]},{"id":"a33c3865.024b68","type":"inject","z":"a164773.56d3188","name":"Byte Value example","topic":"","payload":"{\"payload_raw\":\"ARA=\"}","payloadType":"str","repeat":"","crontab":"","once":false,"x":405,"y":515,"wires":[["70161aa3.d753b4"]]},{"id":"54822e62.0ddda","type":"inject","z":"a164773.56d3188","name":"Text example","topic":"","payload":"{\"payload_raw\":\"SGVsbG8sIHdvcmxkIQ==\"}","payloadType":"str","repeat":"","crontab":"","once":false,"x":387,"y":565,"wires":[["70161aa3.d753b4"]]},{"id":"70310c88.cd4834","type":"function","z":"a164773.56d3188","name":"Example A - Two \"byte pairs\" (4 bytes in total) for Temp and Humidity","func":"var buf = new Buffer(msg.payload.raw, 'base64'); // put in msg.payload the payload raw data stored initially as Base64\nvar node = msg.devEUI;\n\ntemp = buf[2] * 255 + buf[3];\nhum = buf[0] * 255 + buf[1];\n\n// construct a new object to store the data message\nvar data = {\npayload : [\n [{\n numValue: temp/10.0,\n time: new Date(msg.metadata.server_time).getTime()\n },\n {\n tag1:\"temp\",\n sensor:node\n }],\n [{\n numValue: hum/10.0,\n time: new Date(msg.metadata.server_time).getTime()\n },\n {\n tag1:\"hum\",\n sensor:node\n }]\n]};\nreturn data;","outputs":1,"noerr":0,"x":582,"y":827,"wires":[[]]},{"id":"e4a50069.0a075","type":"json","z":"a164773.56d3188","name":"","x":800,"y":340,"wires":[[]]},{"id":"e90cd2a.49ddd3","type":"comment","z":"a164773.56d3188","name":"For MQTT \"user\"/\"password\", use \"Application ID\"/\"default key\" ","info":"\n1) Sign in to TTN and go to your application page where \"app_1\" is your \"Application ID\" e.g.\nhttps://console.thethingsnetwork.org/applications/app_1\n\n2) For MQTT User, use \"Application ID\" \n\n3) For MQTT password, scroll to bottom and use \"default key\" (you need to press the \"eye\" to see the long text)","x":531,"y":388,"wires":[]},{"id":"982d96e9.7e4278","type":"function","z":"a164773.56d3188","name":"Example B - Two \"Float value Byte Quads\" (8 bytes in total) for Lat. and Longitude (Float)","func":"var msg2 = { payload: msg.payload.length };\nmsg2.payload = JSON.parse(msg.payload);\nmsg2.payload = new Buffer(msg2.payload.payload, 'base64').toString('hex');\nvar lat = Buffer(msg2.payload, 'hex').readFloatLE(0);\nvar lon = Buffer(msg2.payload, 'hex').readFloatLE(4);\nmsg2.payload= \"[{\\\"lat\\\":\" + lat + \",\\\"lng\\\":\" + lon + \"}]\";//\"{\"lat\":lat,\"lng\":lon};\nreturn msg2;","outputs":1,"noerr":0,"x":629,"y":879,"wires":[[]]},{"id":"9407349d.2a8c58","type":"ttn message","z":"a164773.56d3188","name":"","app":"d3426ce9.098c1","dev_id":"s4t_01","field":"","x":360,"y":60,"wires":[["435917a7.f4c268"]]},{"id":"d3426ce9.098c1","type":"ttn app","z":"a164773.56d3188","appId":"findmybicycledemovienna","region":"eu","accessKey":"ttn-account-v2.8nDZF_-GQ-U-L22x7w-4-olpHrNEdDFYRNdc9PfXgtM"},{"id":"ac23937f.b79a","type":"mqtt-broker","z":"","broker":"broker.mqtt-dashboard.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]