[{"id":"a11ee054.eb3e8","type":"ttn message","z":"d1d64f32.6571c","name":"","app":"ab4121b5.592af","dev_id":"s4t_01","field":"","x":190,"y":100,"wires":[["ef887.928d77798","9e58023.c5549"]]},{"id":"e499be68.e473a","type":"ttn send","z":"d1d64f32.6571c","name":"","app":"718e645a.0cb29c","dev_id":"","port":"","x":484,"y":274,"wires":[]},{"id":"ef887.928d77798","type":"function","z":"d1d64f32.6571c","name":"function","func":"return {\n    dev_id: msg.dev_id,\n    port: msg.port,\n    payload: {\n        led: !msg.payload\n    }\n};","outputs":1,"noerr":0,"x":332,"y":204,"wires":[["e499be68.e473a","b89a605e.cf64d"]]},{"id":"9e58023.c5549","type":"debug","z":"d1d64f32.6571c","name":"message","active":true,"console":"false","complete":"true","x":441,"y":106,"wires":[]},{"id":"b89a605e.cf64d","type":"debug","z":"d1d64f32.6571c","name":"function","active":true,"console":"false","complete":"true","x":485,"y":191,"wires":[]},{"id":"ff5b2c6a.c0777","type":"mqtt in","z":"d1d64f32.6571c","name":"MQTT Node - TheThingsNetwork","topic":"+/devices/+/up","qos":"2","broker":"1764bd37.070c93","x":240,"y":400,"wires":[["1d20efc2.eba31","6d58b21e.96764c"]]},{"id":"a173662d.bf0498","type":"debug","z":"d1d64f32.6571c","name":"msg.payload.payload_raw - DATA (as is)","active":true,"console":"false","complete":"payload","x":450,"y":591,"wires":[]},{"id":"1d20efc2.eba31","type":"function","z":"d1d64f32.6571c","name":"Decrypt Payload","func":"// msg1 - Unencrypted (vanilla data)\nvar msg1 = { payload: msg.payload.length };\nmsg1.payload = JSON.parse(msg.payload);\nmsg1.payload = msg1.payload.payload_raw;\n\n// msg2 - Decrypt to Text\nvar msg2 = { payload: msg.payload.length };\nmsg2.payload = JSON.parse(msg.payload);\nmsg2.payload = new Buffer(msg2.payload.payload_raw, 'base64').toString('ascii');\n\n// msg3 - Decrypt as Binary value (MSB,LSB)\nvar msg3 = { payload: msg.payload.length };\nmsg3.payload = JSON.parse(msg.payload);\nmsg3.payload = new Buffer(msg3.payload.payload_raw, 'base64').toString('hex');\n//msg3.payload = parseInt(msg3.payload, 16);\n\nreturn [ msg1, msg2, msg3 ];","outputs":"3","noerr":0,"x":527,"y":449,"wires":[["a173662d.bf0498"],["364c9093.ca905"],["95d41909.c5b008"]]},{"id":"364c9093.ca905","type":"debug","z":"d1d64f32.6571c","name":"msg.payload.payload_raw - DATA (decrypted to text)","active":true,"console":"false","complete":"payload","x":486,"y":653.5,"wires":[]},{"id":"95d41909.c5b008","type":"debug","z":"d1d64f32.6571c","name":"msg.payload.payload_raw - DATA (decrypted to Bytes HiLo)","active":true,"console":"false","complete":"payload","x":496,"y":718.5,"wires":[]},{"id":"6d58b21e.96764c","type":"debug","z":"d1d64f32.6571c","name":"message (as is)","active":true,"console":"false","complete":"payload","x":665,"y":399.5,"wires":[]},{"id":"1a960171.96650f","type":"inject","z":"d1d64f32.6571c","name":"Byte Value example","topic":"","payload":"{\"payload_raw\":\"ARA=\"}","payloadType":"str","repeat":"","crontab":"","once":false,"x":235,"y":475,"wires":[["1d20efc2.eba31"]]},{"id":"e7122230.5968b","type":"inject","z":"d1d64f32.6571c","name":"Text example","topic":"","payload":"{\"payload_raw\":\"SGVsbG8sIHdvcmxkIQ==\"}","payloadType":"str","repeat":"","crontab":"","once":false,"x":217,"y":525,"wires":[["1d20efc2.eba31"]]},{"id":"ef8ac733.eb8f38","type":"function","z":"d1d64f32.6571c","name":"Example A - Two \"byte pairs\" (4 bytes in total) for Temp and Humidity","func":"var buf = new Buffer(msg.payload.raw, 'base64'); // put in msg.payload the payload raw data stored initially as Base64\nvar node = msg.devEUI;\n\ntemp = buf[2] * 255 + buf[3];\nhum = buf[0] * 255 + buf[1];\n\n// construct a new object to store the data message\nvar data = {\npayload : [\n [{\n numValue: temp/10.0,\n time: new Date(msg.metadata.server_time).getTime()\n },\n {\n tag1:\"temp\",\n sensor:node\n }],\n [{\n numValue: hum/10.0,\n time: new Date(msg.metadata.server_time).getTime()\n },\n {\n tag1:\"hum\",\n sensor:node\n }]\n]};\nreturn data;","outputs":1,"noerr":0,"x":412,"y":787,"wires":[[]]},{"id":"3d0e8f62.45c31","type":"json","z":"d1d64f32.6571c","name":"","x":630,"y":300,"wires":[[]]},{"id":"ccd75d1d.07897","type":"comment","z":"d1d64f32.6571c","name":"For MQTT \"user\"/\"password\", use \"Application ID\"/\"default key\" ","info":"\n1) Sign in to TTN and go to your application page where \"app_1\" is your \"Application ID\" e.g.\nhttps://console.thethingsnetwork.org/applications/app_1\n\n2) For MQTT User, use \"Application ID\" \n\n3) For MQTT password, scroll to bottom and use \"default key\" (you need to press the \"eye\" to see the long text)","x":361,"y":348,"wires":[]},{"id":"3f5d9da8.f45ec2","type":"function","z":"d1d64f32.6571c","name":"Example B - Two \"Float value Byte Quads\" (8 bytes in total) for Lat. and Longitude (Float)","func":"var msg2 = { payload: msg.payload.length };\nmsg2.payload = JSON.parse(msg.payload);\nmsg2.payload = new Buffer(msg2.payload.payload, 'base64').toString('hex');\nvar lat = Buffer(msg2.payload, 'hex').readFloatLE(0);\nvar lon = Buffer(msg2.payload, 'hex').readFloatLE(4);\nmsg2.payload= \"[{\\\"lat\\\":\" + lat + \",\\\"lng\\\":\" + lon + \"}]\";//\"{\"lat\":lat,\"lng\":lon};\nreturn msg2;","outputs":1,"noerr":0,"x":459,"y":839,"wires":[[]]},{"id":"ab4121b5.592af","type":"ttn app","z":"","appId":"findmybicycledemovienna","region":"root","accessKey":"password"},{"id":"718e645a.0cb29c","type":"ttn app","z":"57968f9c.d7e98","appId":"findmybicycledemovienna","region":"root","accessKey":"password"},{"id":"1764bd37.070c93","type":"mqtt-broker","z":"","broker":"broker.mqtt-dashboard.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]